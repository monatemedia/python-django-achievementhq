name: publish

on:
  push:
    branches: ["main"]

env:
  #Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/python-django-achievementhq:latest
  TAG: ${{ github.sha }} # Unique tag based on the commit SHA

jobs:
  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

          - name: Set up .env Variables
          run: |
            echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env
            echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env
            echo "ADMIN_USER=${{ secrets.ADMIN_USER }}" >> .env
            echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
            echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env
            echo "FAKE_USER_PASSWORD=${{ secrets.FAKE_USER_PASSWORD }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env

      - name: Build and Push Docker Image
        run: |
          docker build . \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
